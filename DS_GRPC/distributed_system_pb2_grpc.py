# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import distributed_system_pb2 as distributed__system__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in distributed_system_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SuperNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GiveRandomNode = channel.unary_unary(
                '/SuperNode/GiveRandomNode',
                request_serializer=distributed__system__pb2.Empty.SerializeToString,
                response_deserializer=distributed__system__pb2.Node.FromString,
                _registered_method=True)
        self.GetFileSystemState = channel.unary_unary(
                '/SuperNode/GetFileSystemState',
                request_serializer=distributed__system__pb2.Empty.SerializeToString,
                response_deserializer=distributed__system__pb2.FileSystemState.FromString,
                _registered_method=True)


class SuperNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GiveRandomNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileSystemState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SuperNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GiveRandomNode': grpc.unary_unary_rpc_method_handler(
                    servicer.GiveRandomNode,
                    request_deserializer=distributed__system__pb2.Empty.FromString,
                    response_serializer=distributed__system__pb2.Node.SerializeToString,
            ),
            'GetFileSystemState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileSystemState,
                    request_deserializer=distributed__system__pb2.Empty.FromString,
                    response_serializer=distributed__system__pb2.FileSystemState.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SuperNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('SuperNode', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SuperNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GiveRandomNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SuperNode/GiveRandomNode',
            distributed__system__pb2.Empty.SerializeToString,
            distributed__system__pb2.Node.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFileSystemState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SuperNode/GetFileSystemState',
            distributed__system__pb2.Empty.SerializeToString,
            distributed__system__pb2.FileSystemState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class DataNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RequestRead = channel.unary_unary(
                '/DataNode/RequestRead',
                request_serializer=distributed__system__pb2.ReadRequest.SerializeToString,
                response_deserializer=distributed__system__pb2.ReadResponse.FromString,
                _registered_method=True)
        self.RequestWrite = channel.unary_unary(
                '/DataNode/RequestWrite',
                request_serializer=distributed__system__pb2.WriteRequest.SerializeToString,
                response_deserializer=distributed__system__pb2.WriteResponse.FromString,
                _registered_method=True)
        self.GetFilesOnNode = channel.unary_unary(
                '/DataNode/GetFilesOnNode',
                request_serializer=distributed__system__pb2.Empty.SerializeToString,
                response_deserializer=distributed__system__pb2.NodeFiles.FromString,
                _registered_method=True)


class DataNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RequestRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestWrite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFilesOnNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RequestRead': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestRead,
                    request_deserializer=distributed__system__pb2.ReadRequest.FromString,
                    response_serializer=distributed__system__pb2.ReadResponse.SerializeToString,
            ),
            'RequestWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestWrite,
                    request_deserializer=distributed__system__pb2.WriteRequest.FromString,
                    response_serializer=distributed__system__pb2.WriteResponse.SerializeToString,
            ),
            'GetFilesOnNode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFilesOnNode,
                    request_deserializer=distributed__system__pb2.Empty.FromString,
                    response_serializer=distributed__system__pb2.NodeFiles.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DataNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('DataNode', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DataNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RequestRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataNode/RequestRead',
            distributed__system__pb2.ReadRequest.SerializeToString,
            distributed__system__pb2.ReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RequestWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataNode/RequestWrite',
            distributed__system__pb2.WriteRequest.SerializeToString,
            distributed__system__pb2.WriteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFilesOnNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataNode/GetFilesOnNode',
            distributed__system__pb2.Empty.SerializeToString,
            distributed__system__pb2.NodeFiles.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
